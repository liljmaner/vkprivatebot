// –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É, –∫–æ—Ç–æ—Ä–∞—è –æ–±–ª–µ–≥—á–∏—Ç —Ä–∞–±–æ—Ç—É —Å API –í–ö
const config = require("./config.json"), // –∫–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª
    { VK } = require('vk-io'), // —Å–∞–º–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞
    { HearManager } = require('@vk-io/hear') // –£–¥–æ–±–µ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
     const vk = new VK({
    token: config.token
});
const command = new HearManager(); // –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä
vk.updates.on('message', command.middleware); 
vk.updates.on('message', async (context, next) => {
    console.log('–ü—Ä–∏—à–ª–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!'); 
    await next(); 
});
command.hear('/start', async (context) => {
    context.send('–≠—Ç–æ –Ω–∞—à–∞ –ø–µ—Ä–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∏ –æ–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç üéâ');
})
vk.updates.start()
    .then(() => console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!'))
    .catch(console.error);